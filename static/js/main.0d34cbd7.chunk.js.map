{"version":3,"sources":["APIKey.js","components/Navbar.js","actions/searchActions.js","actions/types.js","components/SearchForm.js","components/SingleMovie.js","components/NotFound.js","components/MoviesList.js","components/StartPage.js","components/Spinner.js","components/AllSearch.js","components/Footer.js","components/SingleMovieDetails.js","reducers/searchReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","target","rel","class","data-icon","data-inline","setSearchState","SearchForm","changeText","e","props","searchMovieAction","value","submitSearch","preventDefault","searchKeyword","getMoviesAction","onSubmit","this","placeholder","onChange","Component","connect","state","moviesreducer","dispatch","payload","axios","get","APIKey","then","response","data","catch","err","console","log","SingleMovie","movieInfo","src","Poster","alt","Title","Year","Type","imdbID","NotFound","MoviesList","info","searchResult","Response","Search","map","i","key","StartPage","Spinner","style","color","display","margin","AllSearch","searchState","Footer","SingleMovieDetails","getMovieDetails","match","params","movieDetails","Genre","Released","Rated","imdbRating","Director","Writer","Actors","Plot","content","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d34cbd7.chunk.js","sourcesContent":["module.exports = {\r\n    'APIKey': '98b6b38a'\r\n};","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Navbar(){\r\n    return(\r\n        <div className=\"container-fluid\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <Link className=\"navbar-brand name\" to=\"/\">\r\n              MyMovie\r\n            </Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav\"> \r\n                <li className=\"nav-item\">\r\n                    <a href=\"https://www.imdb.com/\" target=\"_blank\" rel=\"noopener noreferrer\"><span className=\"nav-link fab fa-imdb fa-5x\"></span></a>\r\n                </li>      \r\n                <li className=\"nav-item\">\r\n                    <a href=\"https://fontawesome.com/\" target=\"_blank\" rel=\"noopener noreferrer\"><span className=\"nav-link fab fa-font-awesome fa-5x\"></span></a>\r\n                </li>     \r\n                <li className=\"nav-item\">\r\n                    <a href=\"https://getbootstrap.com/\" target=\"_blank\" rel=\"noopener noreferrer\" ><span className=\"nav-link fab fa-bootstrap fa-5x\"></span></a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a href=\"https://redux.js.org/\" target=\"_blank\" rel=\"noopener noreferrer\"><span class=\"iconify\" data-icon=\"simple-icons:redux\" data-inline=\"false\"></span></a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                   <a href=\"https://reactjs.org/\" target=\"_blank\" rel=\"noopener noreferrer\"><span className=\"nav-link fab fa-react fa-5x\"></span></a>\r\n                </li>\r\n\r\n\r\n                </ul>\r\n            </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Navbar","import {MOVIE_SEARCH, GET_MOVIES, GET_MOVIE, SSTATE} from './types'\r\nimport axios from 'axios'\r\nimport {APIKey} from '../APIKey'\r\n\r\nexport const searchMovieAction = searchKeyword => dispatch => {\r\n    dispatch({\r\n        type: MOVIE_SEARCH,\r\n        payload: searchKeyword\r\n    })\r\n};\r\n\r\nexport const getMoviesAction = searchKeyword => dispatch => {\r\n   axios\r\n    .get(`http://www.omdbapi.com/?apikey=${APIKey}&s=${searchKeyword}`)\r\n    .then(response => dispatch({\r\n        type: GET_MOVIES,\r\n        payload: response.data //api object data\r\n    }))\r\n    .catch(err => console.log(err))\r\n};\r\n\r\nexport const getMovieDetails = id => dispatch => {\r\n    axios\r\n      .get(`https://www.omdbapi.com/?apikey=${APIKey}&i=${id}`)\r\n      .then(response =>\r\n        dispatch({\r\n          type: GET_MOVIE,\r\n          payload: response.data\r\n        })\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\nexport const setSearchState = () => {\r\n    return {\r\n      type: SSTATE\r\n    };\r\n  };","export const MOVIE_SEARCH = 'SEARCH MOVIE';\r\nexport const GET_MOVIES = 'GET_MOVIES';\r\nexport const GET_MOVIE = 'GET_MOVIE';\r\nexport const SSTATE = 'SSTATE';","import React, { Component, Fragment} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {searchMovieAction, getMoviesAction, setSearchState} from '../actions/searchActions'\r\n\r\n\r\nclass SearchForm extends Component {\r\n\r\n    changeText = e => {\r\n        this.props.searchMovieAction(e.target.value);\r\n    } \r\n\r\n    submitSearch = e =>{\r\n        e.preventDefault();\r\n        if(this.props.searchKeyword !== ''){\r\n            this.props.getMoviesAction(this.props.searchKeyword);\r\n            this.props.setSearchState();\r\n        }\r\n \r\n    }\r\n    \r\n  render(){\r\n    return (\r\n        <Fragment>\r\n            <form className=\"searchForm\" onSubmit={this.submitSearch}>\r\n                <h2 className=\"formhead\">Search your favourite Movies and TV Series </h2>\r\n                <input type=\"text\" className=\"input-search\" placeholder=\"Enter the Movie or TV Series\" onChange={this.changeText}/>\r\n                <button type=\"submit\" className=\"bttn\">Search</button>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n  } \r\n}\r\nconst mapStateToProps = state => ({\r\n    searchKeyword: state.moviesreducer.searchKeyword,\r\n})\r\nexport default connect(mapStateToProps, {searchMovieAction, getMoviesAction, setSearchState })(SearchForm);\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass SingleMovie extends Component {\r\n    render(){\r\n        const {movieInfo } = this.props;\r\n        return(\r\n            <div className=\"col-md-4\">\r\n                <div className=\"movieCard card\">\r\n                    <div className=\"card-body bg-dark text-center h-100\">\r\n                        <img src={movieInfo.Poster} className=\"cardimg card-img-top w-100 mb-2\" alt=\"Movie Poster\"/>\r\n                        <h5 className=\"text-light card-title\">{movieInfo.Title}</h5>\r\n                        <p className=\"text-light card-text\">{movieInfo.Year}</p>\r\n                        <p className=\"text-light card-text\">{movieInfo.Type}</p>\r\n                        <div class=\"card-footer\">\r\n                        <Link className=\"btn btn-primary btndetails\" to={'/movie/' +movieInfo.imdbID}>More Details</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SingleMovie","import React from 'react'\r\n\r\nfunction NotFound(){\r\n    return(\r\n        <div className=\"container-fluid\">\r\n           <p className=\"notfound\">Not Found ... Search Again!</p>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default NotFound","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport SingleMovie from './SingleMovie' \r\nimport NotFound from './NotFound' \r\n\r\nexport class MoviesList extends Component {\r\n    render(){\r\n        const {searchResult} = this.props;\r\n        let info = '';\r\n        info =\r\n        searchResult.Response == \"True\" ? \r\n        searchResult.Search.map((movieInfo, i) => <SingleMovie key ={i} movieInfo={movieInfo}/>):\r\n        null;\r\n\r\n        if(info != null){\r\n         return(\r\n                <div className=\"row movielist\">\r\n                        {info}\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"row\">\r\n                          <NotFound />\r\n                </div>\r\n                )\r\n        }\r\n    }\r\n        }\r\n  \r\nconst mapStateToProps = state => ({\r\n    searchResult: state.moviesreducer.searchResult,\r\n  });\r\nexport default connect(mapStateToProps)(MoviesList);\r\n","import React from 'react'\r\n\r\nfunction StartPage(){\r\n    return(\r\n        <div className=\"container-fluid startpage\">\r\n           <p>This is a React with Redux Responsive Web App</p>\r\n           <p><a href=\"http://www.omdbapi.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Using The Open Movie Database (OMDb API)</a></p>\r\n           <p className=\"followlinks\">\r\n            <a href=\"https://www.linkedin.com/in/annsaid/\" target=\"_blank\" rel=\"noopener noreferrer\"><span className=\"fab fa-linkedin fa-2x follow\"></span></a>\r\n            <a href=\"https://www.youtube.com/annsaid\" target=\"_blank\" rel=\"noopener noreferrer\"><span className=\"fab fa-youtube-square fa-2x follow\"></span></a>\r\n            <a href=\"https://twitter.com/AnnSaid\" target=\"_blank\" rel=\"noopener noreferrer\"><span className=\"fab fa-twitter-square fa-2x follow\"></span></a>\r\n            <a href=\"https://www.instagram.com/l.annspace/\" target=\"_blank\" rel=\"noopener noreferrer\"><span className=\"fab fa-instagram fa-2x follow\"></span></a>\r\n            <a href=\"https://www.behance.net/annsaid\" target=\"_blank\" rel=\"noopener noreferrer\"><span className=\"fab fa-behance-square fa-2x follow\"></span></a>\r\n            <a href=\"https://github.com/annSaid/\" target=\"_blank\" rel=\"noopener noreferrer\"><span className=\"fab fa-github-square fa-2x follow\"></span></a>\r\n           </p>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default StartPage\r\n","import React from 'react'\r\nfunction Spinner(){\r\n    return(\r\n        <div className=\"spinner\">\r\n            <span className=\"fas fa-spinner fa-2x\" style={{color: '#FFF', display: 'block', margin: 'auto'}}></span>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Spinner","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport SearchForm from './SearchForm'\r\nimport MoviesList from './MoviesList'\r\nimport StartPage from './StartPage'\r\nimport Spinner from './Spinner'\r\n\r\nexport class AllSearch extends Component {\r\n    render(){\r\n      const {searchState, searchResult} = this.props;\r\n      return (\r\n        <div className=\"container\">\r\n            <SearchForm />\r\n            {\r\n            searchState ? \r\n            <Spinner /> : \r\n            searchResult == ''  ?\r\n            <StartPage/>:\r\n            <MoviesList/>\r\n            }\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  const mapStateToProps = state => ({\r\n    searchState: state.moviesreducer.searchState,\r\n    searchResult: state.moviesreducer.searchResult,\r\n  });\r\n  export default connect(mapStateToProps)(AllSearch);","import React from 'react'\r\n\r\nfunction Footer(){\r\n    return(\r\n        <div className=\"container-fluid\">\r\n            <footer className=\"footer\">\r\n             <p className=\"developedby\">Developed by: <span className=\"ann\">Ann S. Abdelwahed</span> using ReactJS with Redux &copy; 2020</p>\r\n            </footer>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Footer","import React, {Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getMovieDetails, setSearchState } from '../actions/searchActions'\r\nimport Spinner from './Spinner'\r\n\r\nexport class SingleMovieDetails extends Component {\r\n    componentDidMount() {\r\n        this.props.getMovieDetails(this.props.match.params.id);\r\n        this.props.setSearchState();\r\n      }\r\n    render(){\r\n        const { movieInfo, searchState } = this.props;\r\n            let movieDetails = (\r\n            <div className=\"container\">\r\n            <div class=\"movieDetails\">\r\n            <div className=\"row\">\r\n                    <div className=\"col-12 col-md-4\">\r\n                        <div className=\"card\">\r\n                            <img src={movieInfo.Poster} className=\"thumbnail\" alt=\"Movie\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-8\">\r\n                       <div class=\"otherDetails\">\r\n                       <h3 className=\"card-title\">{movieInfo.Title}</h3>\r\n                        <ul className=\"list-group\">\r\n                            <li className=\"list-group-item\">\r\n                                <span class=\"movieData\">Genre: </span> {movieInfo.Genre}\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                                <span class=\"movieData\">Released: </span> {movieInfo.Released}\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                                <span class=\"movieData\">Rated: </span> {movieInfo.Rated}\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                                <span class=\"movieData\">IMDB Rating: </span> {movieInfo.imdbRating}\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                                <span class=\"movieData\">Director: </span> {movieInfo.Director}\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                                <span class=\"movieData\">Writer: </span> {movieInfo.Writer}\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                                <span class=\"movieData\">Actors: </span> {movieInfo.Actors}\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                                <span class=\"movieData\">About: </span><br/>\r\n                                {movieInfo.Plot}\r\n                            </li>\r\n                            <a href={'https://www.imdb.com/title/' + movieInfo.imdbID}\r\n                            target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-dark\">View on IMDB</a>\r\n                        </ul>\r\n                       </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n\r\n        let content = searchState ? <Spinner /> : movieDetails;\r\n        return <Fragment>{content}</Fragment>;\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    searchState: state.moviesreducer.searchState,\r\n    movieInfo: state.moviesreducer.movieInfo\r\n  });\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    { getMovieDetails, setSearchState }\r\n  )(SingleMovieDetails);","import {MOVIE_SEARCH, GET_MOVIES, GET_MOVIE, SSTATE} from '../actions/types'\r\n\r\nconst initialState = {\r\n    searchKeyword: '',\r\n    searchResult: [],\r\n    searchState: false,\r\n    movieInfo: []\r\n\r\n}\r\n\r\nexport default function (state = initialState, action ){\r\n    switch(action.type){\r\n        case MOVIE_SEARCH:\r\n            return {\r\n                ...state,\r\n                searchKeyword: action.payload,\r\n                searchState: false\r\n            };\r\n        case GET_MOVIES:\r\n            return {\r\n                ...state,\r\n                searchResult: action.payload,\r\n                searchState: false\r\n            };\r\n        case GET_MOVIE:\r\n                return {\r\n                  ...state,\r\n                  movieInfo: action.payload,\r\n                  searchState: false\r\n                };\r\n        case SSTATE:\r\n                return {\r\n                  ...state,\r\n                  searchState: true\r\n                };\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport searchReducer from './searchReducer'\r\n\r\nexport default combineReducers({\r\n    moviesreducer: searchReducer \r\n});","import {createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension/developmentOnly'\r\nimport rootReducer from './reducers'\r\n\r\nconst middleware = [thunk];\r\nconst initialState = {}; \r\nconst store = createStore(rootReducer, initialState, composeWithDevTools\r\n    (applyMiddleware(...middleware)));\r\n\r\n\r\nexport default store;","import React, { Component, Fragment } from 'react'\nimport {Provider} from 'react-redux'\nimport {HashRouter as Router, Route} from 'react-router-dom' //or you can use BrowswerRouter\nimport Navbar from './components/Navbar'\nimport AllSearch from './components/AllSearch'\nimport Footer from './components/Footer'\nimport SingleMovieDetails from './components/SingleMovieDetails'\nimport store from './store'\nimport './App.css'\nimport './AppMedia.css'\n\nclass App extends Component {\n  render(){\n    return (\n        <Provider store={store}>\n          <Router> \n            <Fragment>\n              <Navbar />\n              <Route exact path='/' component={AllSearch}/>\n              <Route exact path='/movie/:id' component={SingleMovieDetails}/>  \n              <Footer />\n            </Fragment>\n          </Router>\n        </Provider>\n    );\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}